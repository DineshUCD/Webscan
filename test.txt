Using the default profile...

@final @reallyslow

Feature: Look for SQL injections using arachni against a URL



  Scenario: Using arachni, look for SQL injections and verify no issues are found # ./plugins/attacks/code_injection.attack:5

    Given "arachni" is installed                                                  # gauntlt-1.0.12/lib/gauntlt/attack_adapters/arachni.rb:1

    And the following environment variables:                                      # gauntlt-1.0.12/lib/gauntlt/attack_adapters/gauntlt.rb:3

      | name | environment_variable_name |

      | path | CURRENT_DIRECTORY         |

      | url  | URL                       |

    And the following profile:                                                    # gauntlt-1.0.12/lib/gauntlt/attack_adapters/gauntlt.rb:9

      | name     | value         |

      | test     | *             |

      | filename | arachni_tests |

    When I launch an "arachni" attack with:                                       # gauntlt-1.0.12/lib/gauntlt/attack_adapters/arachni.rb:5

      """



      arachni --checks=<test> <url> --report-save-path=<path>/<filename>.afr



      """

    Then the output should contain " "                                            # aruba-0.5.4/lib/aruba/cucumber.rb:131

    When I launch an "arachni" attack with:                                       # gauntlt-1.0.12/lib/gauntlt/attack_adapters/arachni.rb:5

      """

      arachni_reporter <path>/<filename>.afr --reporter=xml:outfile=<path>/<filename>.xml



      """

    Then the output should contain " "                                            # aruba-0.5.4/lib/aruba/cucumber.rb:131



1 scenario (1 passed)

7 steps (7 passed)

1m7.009s

